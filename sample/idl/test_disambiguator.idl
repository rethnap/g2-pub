template<typename T>
struct S {
    template<typename U> void foo(){
        printf("%s\n", __FUNCTION__);
    }
};

template<typename T>
void bar()
{
    S<T> s;
    // s.foo<T>(); // error: < parsed as less than operator
    s.template foo<T>(); // OK
}

int main()
{
    bar<int>();
    return 0;
}
