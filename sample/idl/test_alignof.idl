// from https://en.cppreference.com/w/cpp/language/alignof

extern "C" int32 printf(const char* format, ...);

struct Foo {
    int   i;
    float f;
    char  c;
};

struct Empty {};

// #if !defined(CASE)
#ifndef CASE
#define CASE 0
#endif
#if CASE == 0
static constexpr const int ALIGN = 64;
#elif CASE == 1
static constexpr const int ALIGN = 63;
#else
static constexpr const int ALIGN = 1024 * 1024 * 1024;
#endif

struct alignas(ALIGN) EmptyAlign {};

int main()
{
    printf("Alignment of"  "\n");
    printf("- char             : %lu\n" , alignof(char)    );
    printf("- pointer          : %lu\n" , alignof(int*)    );
    printf("- class Foo        : %lu\n" , alignof(Foo)     );
    printf("- empty class      : %lu\n" , alignof(Empty)   );
    printf("- alignas(%d) Empty: %lu\n" , ALIGN, alignof(EmptyAlign) );
    printf("- char             : %lu\n" , __alignof(char)    );
    printf("- pointer          : %lu\n" , __alignof(int*)    );
    printf("- class Foo        : %lu\n" , __alignof(Foo)     );
    printf("- empty class      : %lu\n" , __alignof(Empty)   );
    printf("- alignas(%d) Empty: %lu\n" , ALIGN, __alignof(EmptyAlign) );

    return 0;
}
